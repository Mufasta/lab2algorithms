//Mustafa Aboul - Jibin
//1001353046
//gcc -o lab2 lab2.c
//./lab1 
#include <stdio.h>
#include <stdlib.h>
#define SIZE 100
int n, s[SIZE], f[SIZE], v[SIZE], p[SIZE], M1[SIZE], M2[SIZE];

int max(int x, int y)
{
    if (x > y)
        return x;
    return y;
}

int binSearchLast(int *finish, int n, int start)
{
    int low, high, mid;
    low = 0;
    high = n - 1;
    while (low <= high)
    {
        mid = (low + high) / 2;
        if (finish[mid] <= start)
            low = mid + 1; 
        else
            high = mid - 1;
    }
    return high;
}

int main(void)
{
    M1[0] = 0;
    M2[0] = 0;
    int i, j = 1;
    int sum1 = 0;
    int sum2 = 0;
    printf("Input size of n: ");
    scanf("%d",&n);
    f[0] = -999999;
    while(n>50){
        printf("n cannot exceed 50. Try again.");
        scanf("%d",&n);
    }
    for (i = 1; i <= n; i++)
        scanf("%d %d %d", &s[i], &f[i], &v[i]);
    for (i = 1; i <= n; i++)
        printf("%d %d %d", s[i], f[i], v[i]);
    //p[i] gives the last non-overlapping interval
    for(i = 1; i <=n; i++){
        p[i] = binSearchLast(f,n+1,s[i]);
        }
    
    for (i = 1; i <= n; i++){
        M1[i] = max(v[i] + M1[p[i]], M1[i - 1]);
    }
    for (i = 2; i <= n; i++)
    {
        p[i] = binSearchLast(f, n + 1, s[i]);
    }

    for (i = 2; i <= n; i++)
    {
        M1[i] = max(v[i] + M1[p[i]], M1[i - 1]);
    }
    printf("  i   s   f   v   p   M1  M2\n");
    for (i = 1; i <= n; i++)
        printf("%3d %3d %3d %3d %3d %3d %3d\n", i, s[i], f[i], v[i], p[i], M1[i], M2[i]);
    for (i = n; i > 0;)
        if (v[i] + M1[p[i]] >= M1[i - 1])
        {
            printf("%d %d %d\n", s[i], f[i], v[i]);
            sum1 += v[i];
            i = p[i];
        }
        else
            i--;
    for (i = n; i > 0;)
        if (v[i] + M2[p[i]] >= M2[i - 1])
        {
            printf("%d %d %d\n", s[i],f[i],v[i]);
            sum1 += v[i];
            i = p[i];
        }
        else
            i--;
    printf("sum is %d\n", sum1 + sum2);
}
